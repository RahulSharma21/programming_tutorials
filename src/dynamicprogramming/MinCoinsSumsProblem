Given a value V, if we want to make change for V cents, and we have infinite supply of each of C = 
{ C1, C2, .. , Cm} valued coins, what is the minimum number of coins to make the change?

Examples:

Input: coins[] = {25, 10, 5}, V = 30

Output: Minimum 2 coins required

We can use one coin of 25 cents and one of 5 cents 

Input: coins[] = {9, 6, 5, 1}, V = 11

Output: Minimum 2 coins required

We can use one coin of 6 cents and 1 coin of 5 cents

https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-change/
https://en.wikipedia.org/wiki/Change-making_problem

For the so-called canonical coin systems, like those used in the US and many other countries, a greedy algorithm of 
picking the largest denomination of coin which is not greater than the remaining amount to be made will produce the 
optimal result.[5] This is not the case for arbitrary coin systems, though: if the coin denominations were 1, 3 and 4, 
then to make 6, the greedy algorithm would choose three coins (4,1,1) whereas the optimal solution is two coins (3,3).